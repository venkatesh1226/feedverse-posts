server.port=8084
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# MySQL Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
# JDBC driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# application.properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl



# Hibernate
# spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update

# logging.level.root=DEBUG

# # Keycloak Configuration
# keycloak.auth-server-url=${KEYCLOAK_URL:http://localhost:8089}
# keycloak.realm=feedverse
# keycloak.resource=feedverse-authenticate-user
# keycloak.public-client=false
# keycloak.credentials.secret=5NZjrIepR5qzT5jqf2k52XLHRV2L2Ldt

# realm=feedverse
# server-url=${KEYCLOAK_URL:http://localhost:8089}
# client-id=admin-cli
# grant-type=password
# name=venkatesh
# password=1234

# # logging.level.root=DEBUG

# spring.security.oauth2.resourceserver.jwt.jwk-set-uri = ${KEYCLOAK_AUTH:http://localhost:8089/realms/feedverse/protocol/openid-connect/certs}

# Kafka configuration
spring.kafka.producer.bootstrap-servers=${KAFKA_SERVER:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
